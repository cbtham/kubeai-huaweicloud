apiVersion: v1 
kind: Service 
metadata:
  namespace: kubeai 
  annotations:   
    kubernetes.io/elb.class: union
    kubernetes.io/elb.autocreate: '{
      "name":"elb-svc-openwebui",
      "type": "public",
      "bandwidth_name": "cce-bandwidth-kubeai",
      "bandwidth_chargemode": "traffic",
      "bandwidth_size": 300,
      "bandwidth_sharetype": "PER",
      "eip_type": "5_bgp" }'
    kubernetes.io/elb.enterpriseID: 0000000-00000000000-000000 # Enterprise Project ID
    kubernetes.io/elb.lb-algorithm: ROUND_ROBIN     # Load balancer algorithm
  labels: 
    app.kubernetes.io/component: open-webui
    app.kubernetes.io/instance: kubeai
  name: elb-svc-openwebui
spec: 
  ports: 
  - name: web-ui
    port: 8888 # Your external access port
    protocol: TCP 
    targetPort: 8080
  selector: 
    app.kubernetes.io/component: open-webui
    app.kubernetes.io/instance: kubeai
  type: LoadBalancer

---

apiVersion: v1
kind: Service
metadata:
  name: elb-svc-api
  labels:
    app.kubernetes.io/instance: kubeai
    app.kubernetes.io/name: kubeai
  namespace: kubeai
  annotations:
    kubernetes.io/elb.class: union
    kubernetes.io/elb.autocreate: '{"name":"elb-kubeai-api","type":"public","bandwidth_name":"cce-bandwidth-1747299377684","bandwidth_chargemode":"traffic","bandwidth_size":5,"bandwidth_sharetype":"PER","eip_type":"5_bgp"}'
    kubernetes.io/elb.enterpriseID: 0000000-00000000000-000000 # Enterprise Project ID
    kubernetes.io/elb.lb-algorithm: ROUND_ROBIN
    kubernetes.io/elb.health-check-flag: 'off'
spec:
  selector:
    app.kubernetes.io/instance: kubeai
    app.kubernetes.io/name: kubeai
  externalTrafficPolicy: Cluster
  ports:
    - name: cce-service-0
      targetPort: 8000
      nodePort: 0
      port: 80
      protocol: TCP
  type: LoadBalancer
